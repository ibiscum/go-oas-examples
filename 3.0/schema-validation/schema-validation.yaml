openapi: 3.0.3
tags:
  - name: validation
info:
  contact:
    name: Example
  title: Request Schema Validation
  description: https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md#path-item-object
  version: 1.0.0
servers:
  - url: https://localhost:8000
paths:
  '/anything/numbers':
    parameters:
      - in: query
        description: Required parameter id-required
        name: id-required
        schema:
          type: number
          minimum: 10
          maximum: 20
          multipleOf: 2
          default: 12
          example: 14
        required: true
      - in: query
        description: Optional parameter id-optional
        name: id-optional
        schema:
          type: number
          minimum: 10
          maximum: 20
          multipleOf: 2
          default: 12
          example: 14
        required: false
      - in: query
        description: Required parameter id-exclusive-required
        name: id-exclusive-required
        schema:
          type: number
          minimum: 10
          maximum: 20
          exclusiveMinimum: true
          exclusiveMaximum: true
          multipleOf: 2
          default: 12
          example: 12
        required: true
      - in: query
        description: Optional parameter id-exclusive-optional
        name: id-exclusive-optional
        schema:
          type: number
          minimum: 10
          maximum: 20
          exclusiveMinimum: true
          exclusiveMaximum: true
          multipleOf: 2
          default: 12
          example: 14
        required: false
    get:
      operationId: get-anything-numbers
      summary: Number validation
      description: Number validation details
      tags:
        - validation
      responses:
        '200':
          description: OK, operation get-anything-numbers
  '/anything/strings':
    parameters:
      - in: query
        description: Required parameter name-length-required
        name: name-length-required
        schema:
          type: string
          minLength: 10
          maxLength: 20
          default: this is a default
          example: this is an example
        required: true
      - in: query
        description: Optional parameter name-length-optional
        name: name-length-optional
        schema:
          type: string
          minLength: 10
          maxLength: 20
          default: this is a default
          example: this is an example
        required: false
      - in: query
        description: Required parameter name-pattern-required
        name: name-pattern-required
        schema:
          type: string
          pattern: a\w+b
          default: aDEFAULTb
          example: aEXAMPLEb
        required: true
      - in: query
        name: complex-pattern-required
        description: "OpenAPI 3.0.3, which defaults to JSON Schema v4, does not provide
          the unicode flag to the input tooltip regex validation. This means that the
          following regex should work. It won't work if unicode is enabled because
          it has unescaped brace literals "
        schema:
          example: '0000-1111-2222-3333-4444-5555-6666-7777'
          type: string
          pattern: '^([0-9a-fA-F]{4}(?:-?[0-9a-fA-F]{4}){7})$'
          # pattern: '^(?:{[0-9a-fA-F]{4}(?:-?[0-9a-fA-F]{4}){7}}|[0-9a-fA-F]{4}(?:-?[0-9a-fA-F]{4}){7})$'
        required: true
      - in: query
        description: Optional parameter name-pattern-optional as string
        name: name-pattern-optional
        schema:
          type: string
          pattern: a\w+b
          default: aDEFAULTb
          example: aEXAMPLEb
        required: false
    get:
      operationId: get-anything-strings
      description: String validation details
      summary: String validation
      tags:
        - validation
      responses:
        '200':
          description: OK
  '/anything/jsonschema-formats':
    parameters:
      - in: query
        description: Optional parameter date-time as string
        name: date-time
        schema:
          type: string
          format: date-time
          default: '1985-04-12T23:20:50.52Z'
          example: '1996-12-19T16:39:57-08:00'
        required: true
      - in: query
        description: Optional parameter date as string
        name: date
        schema:
          type: string
          format: date
          default: '1985-04-12'
          example: '1996-12-19'
        required: false
      - in: query
        description: Optional parameter time as string
        name: time
        schema:
          type: string
          format: time
          default: '23:20:50.52'
          example: 16:39:57-08:00
        required: false
      - in: query
        description: Optional parameter duration as string
        name: duration
        schema:
          type: string
          format: duration
          default: 'P3D'
          example: 'P3W'
        required: false
      - in: query
        description: Optional parameter email as string
        name: email
        schema:
          type: string
          format: email
          default: default@readme.io
          example: example@readme.io
        required: false
      - in: query
        description: Optional parameter idn-email as string
        name: idn-email
        schema:
          type: string
          format: idn-email
          default: 用户@例子.广告
          example: अजय@डाटा.भारत
        required: false
      - in: query
        description: Optional parameter hostname as string
        name: hostname
        schema:
          type: string
          format: hostname
          default: readme.io
          example: readme.com
        required: false
      - in: query
        description: Optional parameter idn-hostname as string
        name: idn-hostname
        schema:
          type: string
          format: idn-hostname
          default: Bücher.example
          example: Bücher.example
        required: false
      - in: query
        description: Optional parameter ipv4 as string
        name: ipv4
        schema:
          type: string
          format: ipv4
          default: 127.0.0.1
          example: 127.0.0.1
        required: false
      - in: query
        description: Optional parameter ipv6 as string
        name: ipv6
        schema:
          type: string
          format: ipv6
          default: 0:0:0:0:0:0:0:1
          example: 0:0:0:0:0:0:0:1
        required: false
      - in: query
        description: Optional parameter uri as string
        name: uri
        schema:
          type: string
          format: uri
          default: http://www.ietf.org/rfc/rfc2396.txt
          example: mailto:John.Doe@example.com
        required: false
      - in: query
        description: Optional parameter uri-reference as string
        name: uri-reference
        schema:
          type: string
          format: uri-reference
          default: '/default'
          example: '/example'
        required: false
      - in: query
        description: Optional parameter iri as string
        name: iri
        schema:
          type: string
          format: iri
          default: https://en.wiktionary.org/wiki/Ῥόδος
          example: https://en.wiktionary.org/wiki/ῥόδον
        required: false
      - in: query
        description: Optional parameter iri-reference as string
        name: iri-reference
        schema:
          type: string
          format: iri-reference
          default: '/wiki/Ῥόδος'
          example: '/wiki/ῥόδον'
        required: false
      - in: query
        name: uuid
        description: Optional parameter uuid as string
        schema:
          type: string
          format: uuid
          default: 123e4567-e89b-12d3-a456-426614174000
          example: 123e4567-e89b-12d3-a456-426652340000
        required: false
      - in: query
        name: uri-template
        description: Optional parameter uri-template as string
        schema:
          type: string
          format: uri-template
          default: http://example.com/search{?q,lang}
          example: http://example.com/dictionary/{term:1}/{term}
        required: false
      - in: query
        description: Optional parameter json-pointer as string
        name: json-pointer
        schema:
          type: string
          format: json-pointer
          default: '/foo'
          example: '/a~1b'
        required: false
      - in: query
        description: Optional parameter relative-json-pointer as string
        name: relative-json-pointer
        schema:
          type: string
          format: relative-json-pointer
          default: 1/nested/objects
          example: 2/foo/0
        required: false
      - in: query
        description: Optional parameter regex as string
        name: regex
        schema:
          type: string
          format: regex
          default: '/default/'
          example: '/[Ee]xample/'
        required: false
    get:
      operationId: get-anything-jsonschema-formats
      description: Formats defined by JSON Schema details
      summary: Formats defined by JSON Schema
      tags:
        - validation
      responses:
        '200':
          description: OK, operation get-anything-jsonschema-formats
  '/anything/oas-formats':
    parameters:
      - in: query
        description: Optional parameter int32 as integer
        name: int32
        schema:
          type: integer
          format: int32
          default: 12345
          example: 23456
        required: true
      - in: query
        description: Optional parameter int64 as integer
        name: int64
        schema:
          type: integer
          format: int64
          default: 3000000000
          example: 4000000000
        required: false
      - in: query
        description: Optional parameter float as number
        name: float
        schema:
          type: number
          format: float
          default: 1.0
          example: 2.0
        required: false
      - in: query
        description: Optional parameter double as number
        name: double
        schema:
          type: number
          format: double
          default: 3000000000.0
          example: 4000000000.0
        required: false
      - in: query
        description: Optional parameter byte as string
        name: byte
        schema:
          example: '9798'
          type: string
          format: byte
        required: false
      - in: query
        description: Optional parameter binary as string
        name: binary
        schema:
          example: '9798'
          type: string
          format: binary
        required: false
      - in: query
        description: Optional parameter password
        name: password
        schema:
          type: string
          format: password
          example: '******'
        required: false
    get:
      operationId: get-anything-oas-formats
      description: Formats defined by OpenAPI details
      summary: Formats defined by OpenAPI
      tags:
        - validation
      responses:
        '200':
          description: OK, operation get-anything-oas-formats
  '/anything/booleans':
    parameters:
      - in: query
        description: Required parameter boolean true/false
        name: tf-required
        schema:
          type: boolean
          default: true
          example: false
        required: true
      - in: query
        name: tf-optional
        description: Optional boolean
        schema:
          type: boolean
          default: true
          example: false
        required: false
    get:
      operationId: get-anything-booleans
      description: Validate booleans
      tags:
        - validation
      summary: Booleans
      responses:
        '200':
          description: OK, operation get-anything-booleans
