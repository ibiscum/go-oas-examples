/*
HTTP Status Codes

Testing RedirectionMessagesAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package httpstatus

import (
	"context"
	"testing"

	openapiclient "github.com/ibiscum/go-oas-examples/3.0/yaml/http-status-codes/httpstatus"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_httpstatus_RedirectionMessagesAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test RedirectionMessagesAPIService GetStatus300", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.RedirectionMessagesAPI.GetStatus300(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RedirectionMessagesAPIService GetStatus301", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.RedirectionMessagesAPI.GetStatus301(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RedirectionMessagesAPIService GetStatus302", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.RedirectionMessagesAPI.GetStatus302(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RedirectionMessagesAPIService GetStatus303", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.RedirectionMessagesAPI.GetStatus303(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RedirectionMessagesAPIService GetStatus304", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.RedirectionMessagesAPI.GetStatus304(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RedirectionMessagesAPIService GetStatus305", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.RedirectionMessagesAPI.GetStatus305(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RedirectionMessagesAPIService GetStatus306", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.RedirectionMessagesAPI.GetStatus306(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RedirectionMessagesAPIService GetStatus307", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.RedirectionMessagesAPI.GetStatus307(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RedirectionMessagesAPIService GetStatus308", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.RedirectionMessagesAPI.GetStatus308(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
